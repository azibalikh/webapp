"use client"

import React from "react"

type Settings = {
  focusTime: number
  breakTime: number
  autoStartBreaks: boolean
  notifications: boolean
}

const defaultSettings: Settings = {
  focusTime: 25,
  breakTime: 5,
  autoStartBreaks: true,
  notifications: true,
}

type SettingsContextType = {
  settings: Settings
  updateSettings: (newSettings: Settings) => void
}

const SettingsContext = React.createContext<SettingsContextType | undefined>(undefined)

export function SettingsProvider({ children }: { children: React.ReactNode }) {
  const [settings, setSettings] = React.useState<Settings>(defaultSettings)

  // Load settings only once on mount
  React.useEffect(() => {
    try {
      const savedSettings = localStorage.getItem("productivity-settings")
      if (savedSettings) {
        setSettings(JSON.parse(savedSettings))
      }
    } catch (error) {
      console.error("Failed to parse settings:", error)
    }
  }, [])

  // Memoize the updateSettings function to prevent unnecessary re-renders
  const updateSettings = React.useCallback((newSettings: Settings) => {
    setSettings(newSettings)
    try {
      localStorage.setItem("productivity-settings", JSON.stringify(newSettings))
    } catch (error) {
      console.error("Failed to save settings:", error)
    }
  }, [])

  // Memoize the context value to prevent unnecessary re-renders
  const contextValue = React.useMemo(
    () => ({
      settings,
      updateSettings,
    }),
    [settings, updateSettings],
  )

  return <SettingsContext.Provider value={contextValue}>{children}</SettingsContext.Provider>
}

export function useSettings() {
  const context = React.useContext(SettingsContext)
  if (context === undefined) {
    throw new Error("useSettings must be used within a SettingsProvider")
  }
  return context
}

